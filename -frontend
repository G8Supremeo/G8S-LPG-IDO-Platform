[1mdiff --git a/g8s-frontend/src/components/IDOPurchase.tsx b/g8s-frontend/src/components/IDOPurchase.tsx[m
[1mindex 00369e0..e33f2e2 100644[m
[1m--- a/g8s-frontend/src/components/IDOPurchase.tsx[m
[1m+++ b/g8s-frontend/src/components/IDOPurchase.tsx[m
[36m@@ -3,13 +3,13 @@[m
 import { useState, useEffect } from "react";[m
 import { motion } from "framer-motion";[m
 import { [m
[31m-  ConnectButton, [m
   useAccount, [m
   useBalance, [m
   useReadContract, [m
   useWriteContract, [m
   useWaitForTransactionReceipt [m
 } from "wagmi";[m
[32m+[m[32mimport { ConnectButton } from "@rainbow-me/rainbowkit";[m
 import { parseEther, parseUnits, formatEther, formatUnits } from "viem";[m
 import { useChainId, useSwitchChain } from "wagmi";[m
 import { sepolia } from "wagmi/chains";[m
[36m@@ -126,7 +126,7 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
   useEffect(() => {[m
     if (tokenAmount && idoPrice) {[m
       const tokens = parseFloat(tokenAmount);[m
[31m-      const decimals = typeof pusdDecimals === 'number' ? (pusdDecimals as number) : 18;[m
[32m+[m[32m      const decimals = typeof pusdDecimals === 'number' ? (pusdDecimals as number) : 0;[m
       const price = Number(formatUnits(idoPrice as bigint, decimals));[m
       const pusd = tokens * price;[m
       setPusdAmount(pusd.toFixed(6));[m
[36m@@ -139,7 +139,7 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
   useEffect(() => {[m
     if (pusdAmount && idoPrice) {[m
       const pusd = parseFloat(pusdAmount);[m
[31m-      const decimals = typeof pusdDecimals === 'number' ? (pusdDecimals as number) : 18;[m
[32m+[m[32m      const decimals = typeof pusdDecimals === 'number' ? (pusdDecimals as number) : 0;[m
       const price = Number(formatUnits(idoPrice as bigint, decimals));[m
       const tokens = pusd / price;[m
       setTokenAmount(tokens.toFixed(2));[m
[36m@@ -158,7 +158,7 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
       if (chainId !== sepolia.id) {[m
         await switchChainAsync({ chainId: sepolia.id });[m
       }[m
[31m-      const decimals = typeof pusdDecimals === 'number' ? pusdDecimals : 18;[m
[32m+[m[32m      const decimals = typeof pusdDecimals === 'number' ? pusdDecimals : 0;[m
       const amount = parseUnits(pusdAmount, decimals);[m
       const hash = await writeContractAsync({[m
         address: CONTRACTS.PUSD_ADDRESS as `0x${string}`,[m
[36m@@ -186,7 +186,7 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
       if (chainId !== sepolia.id) {[m
         await switchChainAsync({ chainId: sepolia.id });[m
       }[m
[31m-      const decimals = typeof pusdDecimals === 'number' ? pusdDecimals : 18;[m
[32m+[m[32m      const decimals = typeof pusdDecimals === 'number' ? pusdDecimals : 0;[m
       const amount = parseUnits(pusdAmount, decimals);[m
       if (!hasEnoughAllowance) {[m
         throw new Error('Please approve PUSD first.');[m
[36m@@ -222,13 +222,13 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
   }, [isPurchaseSuccess]);[m
 [m
   const decimalsLoaded = typeof pusdDecimals === 'number';[m
[31m-  const decimalsNum = decimalsLoaded ? (pusdDecimals as number) : 18;[m
[32m+[m[32m  const decimalsNum = decimalsLoaded ? (pusdDecimals as number) : 0;[m
 [m
   // Derived pricing and tokens-out for display (human-friendly)[m
[31m-  const priceNum = idoPrice ? Number(formatUnits(idoPrice as bigint, decimalsNum)) : undefined;[m
[32m+[m[32m  const priceNum = typeof idoPrice === 'bigint' ? Number(formatUnits(idoPrice as bigint, decimalsNum)) : undefined;[m
   let computedTokensOutWei: bigint = 0n;[m
   try {[m
[31m-    if (pusdAmount && idoPrice) {[m
[32m+[m[32m    if (pusdAmount && typeof idoPrice === 'bigint') {[m
       const amount = parseUnits(pusdAmount, decimalsNum);[m
       const ONE = 1000000000000000000n;[m
       computedTokensOutWei = (amount * ONE) / (idoPrice as bigint);[m
[36m@@ -248,7 +248,8 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
 [m
   const nowSec = Math.floor(Date.now() / 1000);[m
   const withinWindow = saleStart && saleEnd ? (Number(saleStart) <= nowSec && nowSec <= Number(saleEnd)) : true;[m
[31m-  const saleActive = !isPaused && withinWindow;[m
[32m+[m[32m  const pausedBool = isPaused === true;[m
[32m+[m[32m  const saleActive = !pausedBool && withinWindow;[m
 [m
   // Pre-check cap based on entered PUSD[m
   let exceedsCap = false;[m
[36m@@ -313,8 +314,8 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
               <h3 className="text-lg font-semibold text-white">Sale Progress</h3>[m
               <div className="flex items-center space-x-2">[m
                 <div className={`w-3 h-3 rounded-full ${isPaused ? 'bg-red-400' : 'bg-green-400 animate-pulse'}`} />[m
[31m-                <span className={`text-sm font-medium ${isPaused ? 'text-red-400' : 'text-green-400'}`}>[m
[31m-                  {isPaused ? 'Paused' : 'Active'}[m
[32m+[m[32m                <span className={`text-sm font-medium ${pausedBool ? 'text-red-400' : 'text-green-400'}`}>[m
[32m+[m[32m                  {pausedBool ? 'Paused' : 'Active'}[m
                 </span>[m
               </div>[m
             </div>[m
[36m@@ -323,13 +324,13 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
               <div className="flex justify-between text-sm">[m
                 <span className="text-gray-300">Tokens Sold</span>[m
                 <span className="text-white">[m
[31m-                  {tokensSold ? formatEther(tokensSold) : "0"} G8S[m
[32m+[m[32m                  {typeof tokensSold === 'bigint' ? formatEther(tokensSold as bigint) : "0"} G8S[m
                 </span>[m
               </div>[m
               <div className="flex justify-between text-sm">[m
                 <span className="text-gray-300">Total Supply</span>[m
                 <span className="text-white">[m
[31m-                  {tokensForSale ? formatEther(tokensForSale) : "0"} G8S[m
[32m+[m[32m                  {typeof tokensForSale === 'bigint' ? formatEther(tokensForSale as bigint) : "0"} G8S[m
                 </span>[m
               </div>[m
               <div className="w-full bg-gray-700/50 rounded-full h-3">[m
[36m@@ -383,7 +384,7 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
                 min={0}[m
                 step={0.01}[m
                 inputMode="decimal"[m
[31m-                disabled={isPaused}[m
[32m+[m[32m                disabled={pausedBool}[m
               />[m
             </div>[m
 [m
[36m@@ -400,11 +401,11 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
                 min={0}[m
                 step={decimalsNum === 0 ? 1 : 0.000001}[m
                 inputMode="numeric"[m
[31m-                disabled={isPaused}[m
[32m+[m[32m                disabled={pausedBool}[m
               />[m
             </div>[m
 [m
[31m-            {idoPrice && ([m
[32m+[m[32m            {typeof idoPrice === 'bigint' && ([m
               <div className="text-center text-sm text-gray-400">[m
                 Price: {formatUnits(idoPrice as bigint, decimalsNum)} PUSD per G8S token[m
               </div>[m
[36m@@ -446,7 +447,7 @@[m [mexport default function IDOPurchase({ onPurchaseSuccess }: IDOPurchaseProps) {[m
                   whileHover={{ scale: 1.02 }}[m
                   whileTap={{ scale: 0.98 }}[m
                   onClick={handleApprove}[m
[31m-                  disabled={isApproving || isApprovalPending || isPaused}[m
[32m+[m[32m                  disabled={isApproving || isApprovalPending || pausedBool}[m
                   className="w-full px-6 py-4 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-